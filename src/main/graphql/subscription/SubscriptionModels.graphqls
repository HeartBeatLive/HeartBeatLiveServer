"Subscription info. This model represent, that _subscriber_ subscribes to _user_."
type SubscriptionInfo {
    "Subscription id. Using id, both user and subscriber can manage their subscriber/subscription."
    id: ID!

    "User to whom this subscription mapped."
    user: SubscriptionUserProfile!

    "User, who subscribe to _user_. This user will receive heart beats of _user_."
    subscriber: PublicProfile!

    "Time, when this subscription was created."
    subscribeTime: EpochSecondsTime!

    "Subscription lock details."
    lock: SubscriptionLockInfo
}

"Information, about subscription lock status."
type SubscriptionLockInfo {
    "Weather subscription is locked."
    locked: Boolean!

    "Is subscription locked by publisher, eg. _SubscriptionInfo.user_."
    byPublisher: Boolean!

    "Is subscription locked by subscriber, eg. _SubscriptionInfo.subscriber_."
    bySubscriber: Boolean!
}

"Algorithm, that specify how subscriptions pages should be sorted."
enum SubscriptionsSorting {
    "Sort from old subscriptions to new."
    CREATED_ASC,

    "Sort from new subscriptions to old."
    CREATED_DESC
}

"This model represent page result of requested subscriptions."
type SubscribersPage implements PageResult {
    "Subscriptions."
    content: [SubscriptionInfo!]!

    "Page info. Contains info, that can be useful for future pages requests."
    pageInfo: PageInfo!
}